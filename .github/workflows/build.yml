name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
            target: linux_x86_64
          - os: macos-latest
            rust_target: x86_64-apple-darwin
            target: macos_x86_64
          - os: macos-latest
            rust_target: aarch64-apple-darwin
            target: macos_aarch64
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
            target: windows_x86_64
 
    runs-on: ${{ matrix.platform.os }} 
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          target: ${{ matrix.platform.rust_target }}
      - name: Install alsa and udev
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install --no-install-recommends libasound2-dev libudev-dev      
      - name: fmt
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Build
        run: cargo build --verbose --release
      - name: Run tests
        run: cargo test --verbose
      - name: create output file 
        run: |
          mkdir output
          mv assets output
      - name: rename Binaries
        if: matrix.platform.os != 'windows-latest'
        run: mv target/release/kataster output/kataster
      - name: rename Binaries on Windows 
        if: matrix.platform.os == 'windows-latest'
        run: mv target/release/kataster.exe output/kataster.exe
      - uses: actions/upload-artifact@v4
        with:
          name: Kataster-${{ matrix.platform.target }}
          path: output/
          if-no-files-found: error         
